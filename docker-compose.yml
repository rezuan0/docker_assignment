version: "3.3"
networks:
    server-bridge:
        driver: bridge

services:
    main-app:
        image: "main-app:v1"
        env_file:
            - $PWD/.env
        container_name: main-run
        restart: always
        ports:
            - "${MAIN_PORT}:8080"
        command: ["python3", "main.py"]
        volumes:
#            - $PWD/database.py:/pyapp/database.py
            - $PWD/main.py:/pyapp/main.py
        networks:
            - server-bridge

    micro-app1:
        image: "app1:v1"
        env_file:
            - $PWD/.env
        container_name: app1-test
        restart: always
        ports:
            - "${APP1_PORT}:7000"
        command: ["streamlit", "run", "--server.port", "7000", "app1.py"]
        volumes:
            - $PWD/database.py:/pyapp/database.py
            - $PWD/post_app/app1.py:/pyapp/post_app/app1.py
        networks:
            - server-bridge


    mysql:
        image: "mysql:8.0.29-debian"
        container_name: "py-mysql"
        ports:
            - "${DB_PORT}:3306"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_NAME}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "no"
        volumes:
            - "$PWD/mysql/db:/var/lib/mysql"
            - "$PWD/mysql/log:/var/log/mysql"
            - "$PWD/movies.sql:/docker-entrypoint-initdb.d/movies.sql"
        networks:
            - server-bridge